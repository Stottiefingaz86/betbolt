"use client";
import { useViewportHeight } from "@/hooks/useViewportHeight";
import ReelsSwiper from "@/components/ReelsSwiper";
import { useState } from "react";
import { BetSlip365 } from "@/components/betslip/BetSlip365";
import { useBetSlipStore } from "@/lib/store/bet-slip";
import LiquidEther from "@/components/LiquidEther";
import { Receipt, CheckCircle2, Dice6, Share2, Menu } from "lucide-react";
import Image from "next/image";
import GlobalHeader from "@/components/GlobalHeader";

export default function Page() {
  useViewportHeight();
  const [isBetSlipOpen, setIsBetSlipOpen] = useState(false);
  const [isBettingOverlayOpen, setIsBettingOverlayOpen] = useState(false);
  const [isStatsDrawerOpen, setIsStatsDrawerOpen] = useState(false);
  const [isMarketsDrawerOpen, setIsMarketsDrawerOpen] = useState(false);
  const [showSuccessScreen, setShowSuccessScreen] = useState(false);
  const [showBetNotification, setShowBetNotification] = useState(false);
  const [isCasinoGameOpen, setIsCasinoGameOpen] = useState(false);
  const [isMenuDrawerOpen, setIsMenuDrawerOpen] = useState(false);
  const [showSportsLeagues, setShowSportsLeagues] = useState(false);
  const [isBalanceDrawerOpen, setIsBalanceDrawerOpen] = useState(false);
  const [isSearchDrawerOpen, setIsSearchDrawerOpen] = useState(false);
  const [likedReels, setLikedReels] = useState<Set<string>>(new Set());
  const [activeBetFilter, setActiveBetFilter] = useState<'pending' | 'graded'>('pending');
  const [currentBet, setCurrentBet] = useState<{
    match: string;
    market: string;
    selection: string;
    odds: number;
  } | null>(null);
  const [stake, setStake] = useState(5);
  const { legs, addLeg } = useBetSlipStore();

  const reels = [
    // Premier League Reels
    {
      id: 'salah-first-goal',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#dc2626', '#1e40af', '#059669']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            {/* Dark overlay for better text readability */}
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            {/* Side Menu - Instagram Reels Style */}
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">

              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>


              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            {/* Main Content - Bottom Left */}
            <div className="absolute bottom-24 left-6 right-6 z-20">
              {/* Match Header */}
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image
                    src="/Premier League.svg"
                    alt="Premier League"
                    width={20}
                    height={20}
                    className="opacity-80"
                  />
                  <span className="text-white/60 text-xs">Premier League â€¢ Matchday 18</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 3:00 PM GMT</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Liverpool</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Arsenal</div>
                </div>
              </div>

              {/* Stats & Markets Row */}
              <div className="flex items-center space-x-4 mb-3">
                {/* Stats */}
                <button 
                  onClick={() => setIsStatsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                {/* More Markets */}
                <button 
                  onClick={() => setIsMarketsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              {/* Break Line */}
              <div className="w-8 h-px bg-white/30 mb-3"></div>

              {/* Bet Info */}
              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">First Goalscorer</div>
                <div className="text-white text-xl font-bold">Mohamed Salah</div>
              </div>

              {/* CTA */}
              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Liverpool vs Arsenal",
                    market: "First Goalscorer",
                    selection: "Mohamed Salah",
                    odds: 450
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+450</span>
              </button>

            </div>
          </div>
        );
      },
    },
    {
      id: 'chiefs-parlay',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            {/* Liquid Background */}
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#7c3aed', '#eab308', '#3b82f6']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            {/* Dark overlay for better text readability */}
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            {/* Side Menu - Instagram Reels Style */}
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">

              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>


              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            {/* Main Content - Bottom Left */}
            <div className="absolute bottom-24 left-6 right-6 z-20">
              {/* Match Header */}
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image
                    src="/NFL.svg"
                    alt="NFL"
                    width={20}
                    height={20}
                    className="opacity-80"
                  />
                  <span className="text-white/60 text-xs">NFL â€¢ Week 15</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 8:20 PM EST</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Chiefs</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Bills</div>
                </div>
              </div>

              {/* Stats & Markets Row */}
              <div className="flex items-center space-x-4 mb-3">
                {/* Stats */}
                <button 
                  onClick={() => setIsStatsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                {/* More Markets */}
                <button 
                  onClick={() => setIsMarketsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              {/* Break Line */}
              <div className="w-8 h-px bg-white/30 mb-3"></div>

              {/* Parlay Info */}
              <div className="space-y-2 mb-3">
                <div className="text-white/90 text-sm font-medium">Parlay Bundle</div>
                
                <div className="space-y-1">
                  <div className="flex items-center text-white/70 text-xs">
                    <div className="w-1.5 h-1.5 bg-green-400 rounded-full mr-2"></div>
                    <span>Chiefs to Win</span>
                  </div>
                  <div className="flex items-center text-white/70 text-xs">
                    <div className="w-1.5 h-1.5 bg-green-400 rounded-full mr-2"></div>
                    <span>Travis Kelce 1+ TD</span>
                  </div>
                  <div className="flex items-center text-white/70 text-xs">
                    <div className="w-1.5 h-1.5 bg-green-400 rounded-full mr-2"></div>
                    <span>Over 47.5 Total Points</span>
                  </div>
                </div>
              </div>

              {/* CTA */}
              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Chiefs vs Bills",
                    market: "Parlay",
                    selection: "Chiefs + Kelce TD + Over 47.5",
                    odds: 500
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+500</span>
              </button>

            </div>
          </div>
        );
      },
    },
    {
      id: 'kelce-first-td',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            {/* Liquid Background */}
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#dc2626', '#1e3a8a', '#059669']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            {/* Dark overlay for better text readability */}
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            {/* Side Menu - Instagram Reels Style */}
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">

              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            {/* Main Content - Bottom Left */}
            <div className="absolute bottom-24 left-6 right-6 z-20">
              {/* Match Header */}
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image
                    src="/NFL.svg"
                    alt="NFL"
                    width={20}
                    height={20}
                    className="opacity-80"
                  />
                  <span className="text-white/60 text-xs">NFL â€¢ Week 15</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 8:20 PM EST</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Chiefs</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Bills</div>
                </div>
              </div>

              {/* Stats & Markets Row */}
              <div className="flex items-center space-x-4 mb-3">
                {/* Stats */}
                <button 
                  onClick={() => setIsStatsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                {/* More Markets */}
                <button 
                  onClick={() => setIsMarketsDrawerOpen(true)}
                  className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              {/* Break Line */}
              <div className="w-8 h-px bg-white/30 mb-3"></div>

              {/* Bet Info */}
              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">First Touchdown</div>
                <div className="text-white text-xl font-bold">Travis Kelce</div>
              </div>

              {/* CTA */}
              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Chiefs vs Bills",
                    market: "First Touchdown",
                    selection: "Travis Kelce",
                    odds: 350
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+350</span>
              </button>

            </div>
          </div>
        );
      },
    },
    
    // More Premier League
    {
      id: 'over-goals',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther colors={['#059669', '#dc2626', '#7c3aed']} />
            </div>
            <div className="absolute inset-0 bg-black/30 z-10"></div>
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>
            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image
                    src="/Premier League.svg"
                    alt="Premier League"
                    width={20}
                    height={20}
                    className="opacity-80"
                  />
                  <span className="text-white/60 text-xs">Premier League â€¢ Matchday 18</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 3:00 PM GMT</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Man City</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Chelsea</div>
                </div>
              </div>
              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>
                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>
              <div className="w-8 h-px bg-white/30 mb-3"></div>
              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Total Goals</div>
                <div className="text-white text-xl font-bold">Over 3.1 Goals</div>
              </div>
              <button onClick={() => {
                setCurrentBet({
                  match: "Man City vs Chelsea",
                  market: "Total Goals",
                  selection: "Over 3.1",
                  odds: -110
                });
                setIsBettingOverlayOpen(true);
              }} className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2">
                Bet Now <span className="font-bold">-110</span>
              </button>
            </div>
          </div>
        );
      },
    },
    
    // NBA Reel
    {
      id: 'lebron-points',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther colors={['#f59e0b', '#dc2626', '#1e40af']} />
            </div>
            <div className="absolute inset-0 bg-black/30 z-10"></div>
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>
              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>
            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image
                    src="/NBA.svg"
                    alt="NBA"
                    width={20}
                    height={20}
                    className="opacity-80"
                  />
                  <span className="text-white/60 text-xs">NBA â€¢ Regular Season</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Tonight 8:00 PM EST</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Lakers</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Warriors</div>
                </div>
              </div>
              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>
                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>
              <div className="w-8 h-px bg-white/30 mb-3"></div>
              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Player Points</div>
                <div className="text-white text-xl font-bold">LeBron James 25+ Points</div>
              </div>
              <button onClick={() => {
                setCurrentBet({
                  match: "Lakers vs Warriors",
                  market: "Player Points",
                  selection: "LeBron James 25+",
                  odds: -120
                });
                setIsBettingOverlayOpen(true);
              }} className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2">
                Bet Now <span className="font-bold">-120</span>
              </button>
            </div>
          </div>
        );
      },
    },
    
    // Casino Reel - Simple Blackjack
    {
      id: 'blackjack',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            {/* Background Image */}
            <div className="absolute inset-0 z-0">
              <Image
                src="/david-lundmark-finnandtheswirlyspin-netent-1.jpg"
                alt="Finn and the Swirly Spin Background"
                fill
                className="object-cover"
                priority
              />
            </div>
            <div className="absolute inset-0 bg-black/60 z-10"></div>
            
            {/* Logo - Top Left */}


            {/* Game Tile - Left Aligned */}
            <div className="absolute top-1/2 left-6 transform -translate-y-1/2 z-20" style={{marginTop: '-40px'}}>
              <div className="relative">
                <Image
                  src="/bd1b8570d815a0a8_800x800ar.png"
                  alt="Casino Game"
                  width={120}
                  height={120}
                  className="rounded-lg shadow-2xl border-2 border-white/20"
                />
                {/* Glow effect around game tile */}
                <div className="absolute inset-0 rounded-lg shadow-2xl" style={{
                  boxShadow: '0 0 20px rgba(255, 255, 255, 0.3), 0 0 40px rgba(139, 92, 246, 0.4)'
                }}></div>
              </div>
            </div>

            {/* Side Menu - Instagram Reels Style */}
            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            {/* Main Content - Bottom Left */}
            <div className="absolute bottom-24 left-6 right-6 z-20">
              {/* Game Header */}
              <div className="mb-2">
                <div className="text-white/60 text-xs mb-1">Slot Game â€¢ NetEnt</div>
                <div className="text-white text-lg font-bold">Finn and the Swirly Spin</div>
              </div>

              {/* Tournament & Jackpots Buttons */}
              <div className="flex items-center space-x-3 mb-3">
                <button 
                  onClick={() => setIsStatsDrawerOpen(true)}
                  className="flex items-center space-x-2 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20"
                >
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                  </svg>
                  <span className="text-white/70 text-xs">Tournament</span>
                </button>
                
                <button 
                  onClick={() => setIsMarketsDrawerOpen(true)}
                  className="flex items-center space-x-2 bg-gradient-to-r from-yellow-600/30 to-orange-600/30 backdrop-blur-sm hover:from-yellow-500/40 hover:to-orange-500/40 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-yellow-400/30"
                >
                  <svg className="w-4 h-4 text-yellow-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                  </svg>
                  <span className="text-yellow-200 text-xs">Jackpots</span>
                </a>
              </div>

              {/* Break Line */}
              <div className="w-8 h-px bg-white/30 mb-3"></div>

              {/* Game Info */}
              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Description</div>
                <div className="text-white text-xl font-bold">Adventure â€¢ Irish Theme</div>
                <div className="text-white/60 text-xs">RTP: 96.04% â€¢ 7x7 Reels â€¢ High Volatility</div>
              </div>

              {/* Play Now Button */}
              <button 
                onClick={() => setIsCasinoGameOpen(true)}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Play Now
              </button>
            </div>
          </div>
        );
      },
    },

    // 7. Premier League Parlay Bundle
    {
      id: 'premier-league-parlay',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#059669', '#dc2626', '#7c3aed']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              <button 
                onClick={() => {
                  setLikedReels(prev => {
                    const newSet = new Set(prev);
                    if (newSet.has(reelId)) {
                      newSet.delete(reelId);
                    } else {
                      newSet.add(reelId);
                    }
                    return newSet;
                  });
                }}
                className="flex flex-col items-center space-y-1"
              >
                <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'}`}>
                  <svg className="w-6 h-6 text-white" fill={likedReels.has(reelId) ? "currentColor" : "none"} stroke="currentColor" viewBox="0 0 24 24" style={{ filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))' }}>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <span className="text-white text-xs font-medium" style={{ textShadow: '0 1px 2px rgba(0,0,0,0.8)' }}>Like</span>
              </button>

              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image src="/Premier League.svg" alt="Premier League" width={20} height={20} className="opacity-80" />
                  <span className="text-white/60 text-xs">Premier League â€¢ Parlay Bundle</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 3:00 PM GMT</div>
                <div className="text-white text-lg font-bold">Multi-Match Parlay</div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Parlay Bundle</div>
                <div className="text-white text-sm">
                  <div>â€¢ Man City to Win</div>
                  <div>â€¢ Arsenal Over 1.5 Goals</div>
                  <div>â€¢ Liverpool Clean Sheet</div>
                </div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Premier League Parlay",
                    market: "Parlay Bundle",
                    selection: "Man City + Arsenal Goals + Liverpool Clean Sheet",
                    odds: 850
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+850</span>
              </button>
            </div>
          </div>
        );
      },
    },

    // 8. Rabid Randy Casino Reel (Every 4th reel)
    {
      id: 'rabid-randy-slot',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            {/* Casino Background Image */}
            <div className="absolute inset-0 z-0">
              <Image
                src="/rabid_randy_background_2024_07_04.png"
                alt="Rabid Randy Background"
                fill
                className="object-cover"
              />
            </div>
            
            <div className="absolute inset-0 bg-black/60 z-10"></div>



            {/* Casino Game Thumbnail - Left Aligned */}
            <div className="absolute top-1/2 left-6 transform -translate-y-1/2 z-20" style={{marginTop: '-40px'}}>
              <Image
                src="/rabid_randy_square_1080x_1080_2024_08_04.png"
                alt="Rabid Randy Slot"
                width={120}
                height={120}
                className="rounded-lg shadow-lg"
                style={{ boxShadow: '0 0 20px rgba(255, 255, 255, 0.3)' }}
              />
            </div>

            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="text-white text-2xl font-bold mb-2">Rabid Randy</div>

              <div className="flex items-center space-x-4 mb-3">
                <button className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                  </svg>
                  <span className="text-white/70 text-xs">Tournament</span>
                </button>

                <button className="flex items-center space-x-1 bg-gradient-to-r from-yellow-500/20 to-yellow-600/20 backdrop-blur-sm hover:from-yellow-500/30 hover:to-yellow-600/30 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-yellow-400/30">
                  <svg className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"/>
                  </svg>
                  <span className="text-yellow-400 text-xs">Jackpots</span>
                </a>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Slot Game â€¢ Pragmatic Play</div>
                <div className="text-white text-xl font-bold">Wild West Adventure</div>
              </div>

              <button 
                onClick={() => setIsCasinoGameOpen(true)}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Play Now
              </button>
            </div>
          </div>
        );
      },
    },

    // 9. NBA Reel - Curry 3-Pointers
    {
      id: 'curry-threes',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#1d4ed8', '#f59e0b', '#dc2626']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              <button 
                onClick={() => {
                  setLikedReels(prev => {
                    const newSet = new Set(prev);
                    if (newSet.has(reelId)) {
                      newSet.delete(reelId);
                    } else {
                      newSet.add(reelId);
                    }
                    return newSet;
                  });
                }}
                className="flex flex-col items-center space-y-1"
              >
                <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'}`}>
                  <svg className="w-6 h-6 text-white" fill={likedReels.has(reelId) ? "currentColor" : "none"} stroke="currentColor" viewBox="0 0 24 24" style={{ filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))' }}>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <span className="text-white text-xs font-medium" style={{ textShadow: '0 1px 2px rgba(0,0,0,0.8)' }}>Like</span>
              </button>

              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image src="/NBA.svg" alt="NBA" width={20} height={20} className="opacity-80" />
                  <span className="text-white/60 text-xs">NBA â€¢ Regular Season</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 10:00 PM EST</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Warriors</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Lakers</div>
                </div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">3-Pointers Made</div>
                <div className="text-white text-xl font-bold">Stephen Curry Over 4.5</div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Warriors vs Lakers",
                    market: "3-Pointers Made",
                    selection: "Stephen Curry Over 4.5",
                    odds: 180
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+180</span>
              </button>
            </div>
          </div>
        );
      },
    },

    // 10. Champions League Reel - Haaland Goals
    {
      id: 'haaland-goals',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#1e40af', '#dc2626', '#059669']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              <button 
                onClick={() => {
                  setLikedReels(prev => {
                    const newSet = new Set(prev);
                    if (newSet.has(reelId)) {
                      newSet.delete(reelId);
                    } else {
                      newSet.add(reelId);
                    }
                    return newSet;
                  });
                }}
                className="flex flex-col items-center space-y-1"
              >
                <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'}`}>
                  <svg className="w-6 h-6 text-white" fill={likedReels.has(reelId) ? "currentColor" : "none"} stroke="currentColor" viewBox="0 0 24 24" style={{ filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))' }}>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <span className="text-white text-xs font-medium" style={{ textShadow: '0 1px 2px rgba(0,0,0,0.8)' }}>Like</span>
              </button>

              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              <div className="flex flex-col items-center space-y-2">
                <button onClick={() => setIsBetSlipOpen(true)} className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <Image src="/UEFA Champions League.svg" alt="Champions League" width={20} height={20} className="opacity-80" />
                  <span className="text-white/60 text-xs">Champions League â€¢ Round of 16</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 8:00 PM GMT</div>
                <div className="flex items-center space-x-3">
                  <div className="text-white text-lg font-bold">Man City</div>
                  <div className="text-white/40 text-sm">vs</div>
                  <div className="text-white text-lg font-bold">Real Madrid</div>
                </div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Anytime Goalscorer</div>
                <div className="text-white text-xl font-bold">Erling Haaland</div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Man City vs Real Madrid",
                    market: "Anytime Goalscorer",
                    selection: "Erling Haaland",
                    odds: 220
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+220</span>
              </button>
            </div>
          </div>
        );
      },
    },

    // 11. Horse Racing Reel - Kentucky Derby
    {
      id: 'kentucky-derby',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#8b5cf6', '#f59e0b', '#dc2626']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <div className="w-5 h-5 rounded-full bg-purple-600 flex items-center justify-center">
                    <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  </div>
                  <span className="text-white/60 text-xs">Horse Racing â€¢ Kentucky Derby</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 6:57 PM EST</div>
                <div className="text-white text-lg font-bold">Thunder Strike to Win</div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Winner</div>
                <div className="text-white text-xl font-bold">Thunder Strike</div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Kentucky Derby",
                    market: "Winner",
                    selection: "Thunder Strike",
                    odds: 750
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+750</span>
              </button>
            </div>
          </div>
        );
      },
    },

    // 12. Golf Reel - Masters Tournament
    {
      id: 'masters-golf',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#059669', '#f59e0b', '#1e40af']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <div className="w-5 h-5 rounded-full bg-green-600 flex items-center justify-center">
                    <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  </div>
                  <span className="text-white/60 text-xs">Golf â€¢ Masters Tournament</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 2:00 PM EST</div>
                <div className="text-white text-lg font-bold">Tiger Woods to Win</div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Tournament Winner</div>
                <div className="text-white text-xl font-bold">Tiger Woods</div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Masters Tournament",
                    market: "Tournament Winner",
                    selection: "Tiger Woods",
                    odds: 1200
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+1200</span>
              </button>
            </div>
          </div>
        );
      },
    },

    // 13. Formula 1 Reel - Monaco Grand Prix
    {
      id: 'monaco-f1',
      render: (active: boolean, reelId: string) => {
        return (
          <div className="relative h-app w-full">
            <div className="absolute inset-0 z-0">
              <LiquidEther
                colors={['#dc2626', '#1e40af', '#f59e0b']}
                mouseForce={25}
                cursorSize={120}
                isViscous={false}
                viscous={30}
                iterationsViscous={32}
                iterationsPoisson={32}
                resolution={0.6}
                isBounce={false}
                autoDemo={true}
                autoSpeed={0.8}
                autoIntensity={2.5}
                takeoverDuration={0.3}
                autoResumeDelay={2000}
                autoRampDuration={0.8}
              />
            </div>
            
            <div className="absolute inset-0 bg-black/30 z-10"></div>



            <div className="absolute right-4 bottom-24 z-30 flex flex-col items-center space-y-6">
              {/* Menu */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => setIsMenuDrawerOpen(true)}
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M6 12h12M8 18h8" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Menu</span>
                </button>
              </div>

              {/* Like */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  className="relative"
                  onClick={() => {
                    setLikedReels(prev => {
                      const newSet = new Set(prev);
                      if (newSet.has(reelId)) {
                        newSet.delete(reelId);
                      } else {
                        newSet.add(reelId);
                      }
                      return newSet;
                    });
                  }}
                >
                  <div className={`w-12 h-12 rounded-full backdrop-blur-sm border border-white/20 flex items-center justify-center transition-all duration-200 ${
                    likedReels.has(reelId) ? 'bg-pink-500' : 'bg-white/10'
                  }`}>
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Like</span>
                </button>
              </div>

              {/* Casino */}
              <div className="flex flex-col items-center space-y-2">
                <a href="/casino" className="relative">
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                      <circle cx="12" cy="12" r="2"/>
                    </svg>
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>Casino</span>
                </a>
              </div>

              {/* My Bets */}
              <div className="flex flex-col items-center space-y-2">
                <button 
                  onClick={() => setIsBetSlipOpen(true)}
                  className="relative"
                >
                  <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                    {legs.length > 0 && (
                      <div className="absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center" style={{filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))'}}>
                        <span className="text-white text-xs font-bold">{legs.length}</span>
                      </div>
                    )}
                  </div>
                  <span className="text-white text-xs font-medium mt-2" style={{textShadow: '0 1px 2px rgba(0,0,0,0.8)'}}>My Bets</span>
                </button>
              </div>

            </div>

            <div className="absolute bottom-24 left-6 right-6 z-20">
              <div className="mb-2">
                <div className="flex items-center space-x-2 mb-1">
                  <div className="w-5 h-5 rounded-full bg-red-600 flex items-center justify-center">
                    <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  </div>
                  <span className="text-white/60 text-xs">Formula 1 â€¢ Monaco Grand Prix</span>
                </div>
                <div className="text-white/80 text-xs mb-2">Today 3:00 PM CET</div>
                <div className="text-white text-lg font-bold">Lewis Hamilton to Win</div>
              </div>

              <div className="flex items-center space-x-4 mb-3">
                <button onClick={() => setIsStatsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  <span className="text-white/70 text-xs">Stats</span>
                </button>

                <button onClick={() => setIsMarketsDrawerOpen(true)} className="flex items-center space-x-1 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-lg px-3 py-2 transition-all duration-200 active:scale-95 border border-white/20">
                  <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="text-white/70 text-xs">+34</span>
                </button>
              </div>

              <div className="w-8 h-px bg-white/30 mb-3"></div>

              <div className="space-y-1 mb-3">
                <div className="text-white/80 text-sm font-medium">Race Winner</div>
                <div className="text-white text-xl font-bold">Lewis Hamilton</div>
              </div>

              <button 
                onClick={() => {
                  setCurrentBet({
                    match: "Monaco Grand Prix",
                    market: "Race Winner",
                    selection: "Lewis Hamilton",
                    odds: 450
                  });
                  setIsBettingOverlayOpen(true);
                }}
                className="bg-white text-black py-3 px-6 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-white/90 active:scale-95 mb-2"
              >
                Bet Now <span className="font-bold">+450</span>
              </button>
            </div>
          </div>
        );
      },
    }
  ];

  return (
    <div
      className="relative safari-fullscreen"
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        width: '100vw',
        height: '100vh',
        overflow: 'hidden',
        zIndex: 1
      }}
    >
      <GlobalHeader 
        isBalanceDrawerOpen={isBalanceDrawerOpen}
        setIsBalanceDrawerOpen={setIsBalanceDrawerOpen}
      />
      <ReelsSwiper items={reels} />
      
      {/* My Bets Modal */}
      {isBetSlipOpen && (
        <div className="fixed inset-0 z-50 bg-black/20 backdrop-blur-sm">
          <div className="absolute bottom-0 left-0 right-0 bg-white rounded-t-2xl max-h-[85vh] overflow-hidden shadow-2xl">
            {/* Handle */}
            <div className="flex justify-center pt-3 pb-2">
              <div className="w-12 h-1 bg-gray-300 rounded-full"></div>
            </div>
            
            {/* Header */}
            <div className="px-6 py-4 border-b border-gray-100">
              <div className="flex justify-between items-center">
                <h2 className="text-xl font-bold text-black">My Bets</h2>
                <button 
                  onClick={() => setIsBetSlipOpen(false)}
                  className="w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center hover:bg-gray-200 transition-all"
                >
                  <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
            </div>

            {/* Filter Tabs */}
            <div className="px-6 py-4 border-b border-gray-100">
              <div className="flex space-x-2">
                {[
                  { label: "Pending", count: legs.filter(leg => leg.status === 'pending').length, type: 'pending' as const },
                  { label: "Graded", count: legs.filter(leg => leg.status !== 'pending').length, type: 'graded' as const }
                ].map((tab) => (
                  <button
                    key={tab.label}
                    onClick={() => setActiveBetFilter(tab.type)}
                    className={`flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                      activeBetFilter === tab.type
                        ? 'bg-black text-white shadow-sm' 
                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                    }`}
                  >
                    <span>{tab.label}</span>
                    <span className={`w-5 h-5 rounded-full text-xs flex items-center justify-center ${
                      activeBetFilter === tab.type ? 'bg-white text-black' : 'bg-gray-400 text-white'
                    }`}>
                      {tab.count}
                    </span>
                  </a>
                ))}
              </div>
            </div>

            {/* Bet List */}
            <div className="flex-1 overflow-y-auto px-6 py-4">
              {(() => {
                const filteredLegs = activeBetFilter === 'pending' 
                  ? legs.filter(leg => leg.status === 'pending')
                  : legs.filter(leg => leg.status !== 'pending');
                
                if (filteredLegs.length === 0) {
                  return (
                    <div className="text-center py-12">
                      <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg className="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                      </div>
                      <h3 className="text-lg font-semibold text-gray-900 mb-2">
                        {activeBetFilter === 'pending' ? 'No pending bets' : 'No graded bets'}
                      </h3>
                      <p className="text-gray-500 text-sm">
                        {activeBetFilter === 'pending' 
                          ? 'All your bets have been settled' 
                          : 'Place some bets to see them here'}
                      </p>
                    </div>
                  );
                }
                
                return (
                  <div className="space-y-3">
                    {filteredLegs.map((leg, index) => (
                    <div key={leg.id} className="bg-gray-50 rounded-xl p-4 border border-gray-200">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center space-x-2 mb-1">
                            <h4 className="font-semibold text-gray-900 text-sm">{leg.selection}</h4>
                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                              leg.status === 'pending' 
                                ? 'bg-yellow-100 text-yellow-800' 
                                : leg.status === 'won'
                                ? 'bg-green-100 text-green-800'
                                : 'bg-red-100 text-red-800'
                            }`}>
                              {leg.status === 'pending' ? 'Pending' : leg.status === 'won' ? 'Won' : 'Lost'}
                            </span>
                          </div>
                          <p className="text-gray-600 text-xs mb-2">{leg.market} â€¢ {leg.match}</p>
                          <div className="flex items-center space-x-4 text-xs text-gray-500">
                            <span>Stake: ${leg.stake}</span>
                            <span>Odds: {leg.odds > 0 ? `+${leg.odds}` : leg.odds}</span>
                            {leg.status === 'pending' ? (
                              <span className="font-medium text-blue-600">
                                {leg.match.includes('Chiefs') ? 'Sun, Dec 15 1:00 PM' : 
                                 leg.match.includes('Lakers') ? 'Mon, Dec 16 8:00 PM' :
                                 leg.match.includes('Arsenal') ? 'Sat, Dec 14 3:00 PM' : 'Game Time TBD'}
                              </span>
                            ) : (
                              <span className="font-medium">
                                {leg.status === 'won' ? `Win: $${(leg.stake * (leg.odds > 0 ? leg.odds / 100 : 100 / Math.abs(leg.odds))).toFixed(2)}` : 'Loss'}
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                    ))}
                  </div>
                );
              })()}
            </div>
          </div>
        </div>
      )}

      {/* Place Bet Drawer */}
      {isBettingOverlayOpen && currentBet && (
        <div className="fixed inset-0 bg-black/20 backdrop-blur-sm z-50 flex items-end">
          <div 
            className="bg-white/90 backdrop-blur-sm w-full rounded-t-2xl shadow-2xl border border-white/20"
            onClick={(e) => e.stopPropagation()}
          >
            {/* Handle */}
            <div className="flex justify-center pt-2 pb-1">
              <div className="w-12 h-1 bg-gray-300 rounded-full"></div>
            </div>
            
            {/* Content */}
            <div className="px-4 pb-4">
              <div className="flex justify-between items-center mb-3">
                <h2 className="text-black text-lg font-bold">Place Bet</h2>
                <button 
                  onClick={() => setIsBettingOverlayOpen(false)}
                  className="w-7 h-7 rounded-full bg-gray-100 flex items-center justify-center hover:bg-gray-200 transition-all"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
              
              {/* Stake Section - Ghost Card */}
              <div className="bg-white/5 backdrop-blur-sm rounded-xl p-4 mb-4 border border-white/15">
                {/* Stake Display */}
                <div className="text-center mb-4">
                  <div className="text-gray-600 text-sm mb-1">Stake</div>
                  <div className="text-black text-5xl font-black">${stake}</div>
                  <div className="text-gray-700 text-sm mt-1 font-medium">
                    Win: ${(stake * (currentBet.odds > 0 ? currentBet.odds / 100 : 100 / Math.abs(currentBet.odds))).toFixed(2)}
                  </div>
                </div>
                
                {/* Stake Slider */}
                <div>
                  <input
                    type="range"
                    min="5"
                    max="1000"
                    step="5"
                    value={stake}
                    onChange={(e) => setStake(Number(e.target.value))}
                    className="w-full h-4 bg-gray-300 rounded-lg appearance-none cursor-pointer slider-custom"
                    style={{
                      background: `linear-gradient(to right, 
                        #10b981 0%, 
                        #8b5cf6 ${((stake - 5) / (1000 - 5)) * 100}%, 
                        #d1d5db ${((stake - 5) / (1000 - 5)) * 100}%, 
                        #d1d5db 100%)`
                    }}
                  />
                  <style jsx>{`
                    .slider-custom::-webkit-slider-thumb {
                      appearance: none;
                      height: 28px;
                      width: 28px;
                      border-radius: 50%;
                      background: linear-gradient(135deg, #10b981 0%, #8b5cf6 100%);
                      cursor: pointer;
                      border: 3px solid #ffffff;
                      box-shadow: 
                        0 0 0 4px rgba(16, 185, 129, 0.2),
                        0 0 0 8px rgba(16, 185, 129, 0.1),
                        0 4px 12px rgba(0, 0, 0, 0.3);
                      transition: all 0.2s ease;
                    }
                    .slider-custom::-webkit-slider-thumb:hover {
                      transform: scale(1.1);
                      box-shadow: 
                        0 0 0 6px rgba(16, 185, 129, 0.3),
                        0 0 0 12px rgba(16, 185, 129, 0.15),
                        0 6px 16px rgba(0, 0, 0, 0.4);
                    }
                    .slider-custom::-moz-range-thumb {
                      height: 28px;
                      width: 28px;
                      border-radius: 50%;
                      background: linear-gradient(135deg, #10b981 0%, #8b5cf6 100%);
                      cursor: pointer;
                      border: 3px solid #ffffff;
                      box-shadow: 
                        0 0 0 4px rgba(16, 185, 129, 0.2),
                        0 0 0 8px rgba(16, 185, 129, 0.1),
                        0 4px 12px rgba(0, 0, 0, 0.3);
                    }
                  `}</style>
                  <div className="flex justify-between text-xs mt-2 font-medium">
                    <span className="text-black">$5</span>
                    <span className="text-black">$1000</span>
                  </div>
                </div>
              </div>
              
              {/* Bet Selection */}
              <div className="bg-gray-50/80 rounded-lg p-3 mb-4 border border-gray-200/80">
                <div className="flex items-center justify-between">
                  <div>
                    <div className="text-black font-bold text-sm">{currentBet.selection}</div>
                    <div className="text-gray-600 text-xs">{currentBet.market}</div>
                    <div className="text-gray-500 text-xs">{currentBet.match}</div>
                  </div>
                  <div className="text-black font-bold">{currentBet.odds > 0 ? `+${currentBet.odds}` : currentBet.odds}</div>
                </div>
              </div>
              
              {/* Place Bet Button */}
              <button 
                onClick={() => {
                  // Place bet directly
                  addLeg({
                    id: `${currentBet.match}-${currentBet.selection}`,
                    match: currentBet.match,
                    market: currentBet.market,
                    selection: currentBet.selection,
                    odds: currentBet.odds,
                    stake: stake,
                  });
                  
                  // Show success screen
                  setShowSuccessScreen(true);
                }}
                className="w-full bg-black hover:bg-gray-800 text-white py-3 rounded-lg font-bold transition-all"
              >
                Place Bet
              </button>
            </div>
            
            {/* Success Screen */}
            {showSuccessScreen && (
              <div className="absolute inset-0 bg-white rounded-t-2xl shadow-2xl flex flex-col items-center justify-center p-6">
                {/* Success Icon */}
                <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mb-6">
                  <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </div>
                
                {/* Success Message */}
                <h2 className="text-2xl font-bold text-black mb-2">Bet Placed!</h2>
                <p className="text-gray-600 text-center mb-8">
                  Your bet has been successfully placed and added to your bet history.
                </p>
                
                {/* Close Button - Main CTA */}
                <button
                  onClick={() => {
                    setIsBettingOverlayOpen(false);
                    setCurrentBet(null);
                    setStake(5);
                    setShowSuccessScreen(false);
                    setShowBetNotification(true);
                  }}
                  className="w-full bg-gray-100 hover:bg-gray-200 text-black py-3 rounded-lg font-bold transition-all mb-3 border border-gray-200"
                >
                  Close
                </a>
                
                {/* My Bets Button - Secondary */}
                <button
                  onClick={() => {
                    setIsBettingOverlayOpen(false);
                    setCurrentBet(null);
                    setStake(5);
                    setShowSuccessScreen(false);
                    setShowBetNotification(true);
                    // Open My Bets after a short delay
                    setTimeout(() => {
                      setIsBetSlipOpen(true);
                    }, 100);
                  }}
                  className="text-gray-600 hover:text-gray-800 text-sm underline"
                >
                  View My Bets
                </a>
              </div>
            )}
          </div>
        </div>
      )}

      {/* Stats Drawer */}
      {isStatsDrawerOpen && (
        <div className="fixed inset-0 z-50 flex items-end justify-center">
          <div className="absolute inset-0 bg-black/50" onClick={() => setIsStatsDrawerOpen(false)}></div>
          <div className="relative bg-white rounded-t-3xl w-full max-w-md max-h-[80vh] overflow-y-auto">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-900">Head-to-Head Stats</h2>
                <button 
                  onClick={() => setIsStatsDrawerOpen(false)}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
              
              <div className="space-y-6">
                <div className="text-center">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Chiefs vs Bills</h3>
                  <div className="text-sm text-gray-600 mb-4">Last Meeting: Week 6, 2023</div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="text-center p-4 bg-gray-50 rounded-lg">
                    <div className="text-2xl font-bold text-gray-900">27</div>
                    <div className="text-sm text-gray-600">Chiefs Points</div>
                  </div>
                  <div className="text-center p-4 bg-gray-50 rounded-lg">
                    <div className="text-2xl font-bold text-gray-900">24</div>
                    <div className="text-sm text-gray-600">Bills Points</div>
                  </div>
                </div>

                <div className="space-y-3">
                  <div className="flex justify-between items-center py-2 border-b border-gray-200">
                    <span className="text-gray-700">Total Yards</span>
                    <div className="flex space-x-4">
                      <span className="font-semibold">Chiefs: 387</span>
                      <span className="font-semibold">Bills: 342</span>
                    </div>
                  </div>
                  <div className="flex justify-between items-center py-2 border-b border-gray-200">
                    <span className="text-gray-700">Passing Yards</span>
                    <div className="flex space-x-4">
                      <span className="font-semibold">Chiefs: 298</span>
                      <span className="font-semibold">Bills: 245</span>
                    </div>
                  </div>
                  <div className="flex justify-between items-center py-2 border-b border-gray-200">
                    <span className="text-gray-700">Rushing Yards</span>
                    <div className="flex space-x-4">
                      <span className="font-semibold">Chiefs: 89</span>
                      <span className="font-semibold">Bills: 97</span>
                    </div>
                  </div>
                  <div className="flex justify-between items-center py-2">
                    <span className="text-gray-700">Turnovers</span>
                    <div className="flex space-x-4">
                      <span className="font-semibold">Chiefs: 1</span>
                      <span className="font-semibold">Bills: 2</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* More Markets Drawer */}
      {isMarketsDrawerOpen && (
        <div className="fixed inset-0 z-50 flex items-end justify-center">
          <div className="absolute inset-0 bg-black/50" onClick={() => setIsMarketsDrawerOpen(false)}></div>
          <div className="relative bg-white rounded-t-3xl w-full max-w-md max-h-[80vh] overflow-y-auto">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-900">More Markets</h2>
                <button 
                  onClick={() => setIsMarketsDrawerOpen(false)}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
              
              <div className="space-y-4">
                <div className="text-center">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Chiefs vs Bills</h3>
                  <div className="text-sm text-gray-600 mb-6">Today 8:20 PM EST</div>
                </div>

                {/* Moneyline */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h4 className="font-semibold text-gray-900 mb-3">Moneyline</h4>
                  <div className="grid grid-cols-2 gap-3">
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Moneyline",
                          selection: "Chiefs",
                          odds: -120
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Chiefs</div>
                      <div className="text-blue-600 font-bold">-120</div>
                    </a>
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Moneyline",
                          selection: "Bills",
                          odds: +110
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Bills</div>
                      <div className="text-blue-600 font-bold">+110</div>
                    </a>
                  </div>
                </div>

                {/* Spread */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h4 className="font-semibold text-gray-900 mb-3">Spread</h4>
                  <div className="grid grid-cols-2 gap-3">
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Spread",
                          selection: "Chiefs -3.5",
                          odds: -110
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Chiefs -3.5</div>
                      <div className="text-blue-600 font-bold">-110</div>
                    </a>
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Spread",
                          selection: "Bills +3.5",
                          odds: -110
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Bills +3.5</div>
                      <div className="text-blue-600 font-bold">-110</div>
                    </a>
                  </div>
                </div>

                {/* Total Points */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h4 className="font-semibold text-gray-900 mb-3">Total Points</h4>
                  <div className="grid grid-cols-2 gap-3">
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Total Points",
                          selection: "Over 47.5",
                          odds: -105
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Over 47.5</div>
                      <div className="text-blue-600 font-bold">-105</div>
                    </a>
                    <button 
                      onClick={() => {
                        setCurrentBet({
                          match: "Chiefs vs Bills",
                          market: "Total Points",
                          selection: "Under 47.5",
                          odds: -115
                        });
                        setIsBettingOverlayOpen(true);
                        setIsMarketsDrawerOpen(false);
                      }}
                      className="bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <div className="font-semibold text-gray-900">Under 47.5</div>
                      <div className="text-blue-600 font-bold">-115</div>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Menu Drawer */}
      {isMenuDrawerOpen && (
        <div className="fixed inset-0 z-50">
          <div 
            className="absolute inset-0 bg-black/50 backdrop-blur-sm" 
            onClick={() => {
              setIsMenuDrawerOpen(false);
              setShowSportsLeagues(false);
            }}
          ></div>
          <div className="absolute right-0 top-0 h-full w-80 bg-white/95 backdrop-blur-xl border-l border-white/20 shadow-2xl flex flex-col">
            {/* Header */}
            <div className="p-6 border-b border-gray-200/50 flex-shrink-0">
              <div className="flex items-center justify-between">
                <span className="text-xl font-bold text-gray-900">Menu</span>
                <button
                  onClick={() => {
                    setIsMenuDrawerOpen(false);
                    setShowSportsLeagues(false);
                  }}
                  className="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
            </div>

            {/* Menu Items */}
            <div className="p-4 space-y-2 overflow-y-auto flex-1 min-h-0">
              {!showSportsLeagues ? (
                <>
                  {/* My Favourites */}
                  <button
                    onClick={() => setIsBetSlipOpen(true)}
                    className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left"
                  >
                    <div className="w-10 h-10 rounded-full bg-pink-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-pink-600" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">My Favourites</div>
                      <div className="text-sm text-gray-500">Your liked reels</div>
                    </div>
                  </a>

                  {/* Casino */}
                  <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                    <div className="w-10 h-10 rounded-full bg-purple-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-purple-600" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>
                        <circle cx="12" cy="12" r="2"/>
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">Casino</div>
                      <div className="text-sm text-gray-500">Slots & table games</div>
                    </div>
                  </a>

                  {/* Sports */}
                  <button
                    onClick={() => setShowSportsLeagues(true)}
                    className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left"
                  >
                    <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                      </svg>
                    </div>
                    <div className="flex-1">
                      <div className="font-semibold text-gray-900">Sports</div>
                      <div className="text-sm text-gray-500">All sports leagues</div>
                    </div>
                    <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                    </svg>
                  </a>

                  {/* Loyalty */}
                  <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                    <div className="w-10 h-10 rounded-full bg-yellow-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-yellow-600" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M5 16L3 5l5.5 5L12 4l3.5 6L21 5l-2 11H5zm2.7-2h8.6l.9-5.4L12 8.5 6.8 8.6L7.7 14z"/>
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">Loyalty</div>
                      <div className="text-sm text-gray-500">Rewards & points</div>
                    </div>
                  </a>

                  {/* Line Break */}
                  <div className="my-6 border-t border-gray-200"></div>

                  {/* Deposit/Withdraw - Moved above Support */}
                  <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                    <div className="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">Deposit & Withdraw</div>
                      <div className="text-sm text-gray-500">Manage your funds</div>
                    </div>
                  </a>

                  {/* Support */}
                  <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                    <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">Support</div>
                      <div className="text-sm text-gray-500">Help & contact</div>
                    </div>
                  </a>
                </>
              ) : (
                <>
                  {/* Back Button */}
                  <button
                    onClick={() => setShowSportsLeagues(false)}
                    className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left mb-4"
                  >
                    <div className="w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center">
                      <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">Back to Menu</div>
                    </div>
                  </a>

                  {/* Sports Leagues */}
                  <div className="space-y-2">
                    <h3 className="text-lg font-bold text-gray-900 mb-4">Sports Leagues</h3>
                    
                    {/* Premier League */}
                    <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                      <Image src="/Premier League.svg" alt="Premier League" width={32} height={32} />
                      <div>
                        <div className="font-semibold text-gray-900">Premier League</div>
                        <div className="text-sm text-gray-500">English football</div>
                      </div>
                    </a>

                    {/* NFL */}
                    <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                      <Image src="/NFL.svg" alt="NFL" width={32} height={32} />
                      <div>
                        <div className="font-semibold text-gray-900">NFL</div>
                        <div className="text-sm text-gray-500">American football</div>
                      </div>
                    </a>

                    {/* NBA */}
                    <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                      <Image src="/NBA.svg" alt="NBA" width={32} height={32} />
                      <div>
                        <div className="font-semibold text-gray-900">NBA</div>
                        <div className="text-sm text-gray-500">Basketball</div>
                      </div>
                    </a>

                    {/* Champions League */}
                    <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                      <div className="w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center">
                        <span className="text-white text-xs font-bold">CL</span>
                      </div>
                      <div>
                        <div className="font-semibold text-gray-900">Champions League</div>
                        <div className="text-sm text-gray-500">European football</div>
                      </div>
                    </a>

                    {/* La Liga */}
                    <button className="w-full flex items-center space-x-4 p-4 rounded-xl hover:bg-gray-50 transition-colors text-left">
                      <div className="w-8 h-8 rounded-full bg-red-600 flex items-center justify-center">
                        <span className="text-white text-xs font-bold">LL</span>
                      </div>
                      <div>
                        <div className="font-semibold text-gray-900">La Liga</div>
                        <div className="text-sm text-gray-500">Spanish football</div>
                      </div>
                    </a>
                  </div>
                </>
              )}
            </div>
          </div>
        </div>
      )}

      {/* Balance Drawer */}
      {isBalanceDrawerOpen && (
        <div className="fixed inset-0 z-50">
          <div 
            className="absolute inset-0 bg-black/50 backdrop-blur-sm" 
            onClick={() => setIsBalanceDrawerOpen(false)}
          ></div>
          <div className="absolute bottom-0 left-0 right-0 bg-white/95 backdrop-blur-xl rounded-t-2xl max-h-[80vh] overflow-hidden border-t border-white/20">
            {/* Handle */}
            <div className="flex justify-center pt-2 pb-1">
              <div className="w-12 h-1 bg-gray-300 rounded-full"></div>
            </div>

            {/* Header */}
            <div className="px-4 py-3 border-b border-gray-200/50">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-bold text-gray-900">My Account</h2>
                <button
                  onClick={() => setIsBalanceDrawerOpen(false)}
                  className="w-7 h-7 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 hover:bg-white/20 flex items-center justify-center transition-colors"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
            </div>

            {/* Content */}
            <div className="px-4 py-4 space-y-4 overflow-y-auto max-h-[60vh]">
              {/* User Info - Compact */}
              <div className="flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-xl border border-white/20">
                <div className="w-12 h-12 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                  <span className="text-white text-sm font-bold">BB</span>
                </div>
                <div className="flex-1 flex items-center space-x-3">
                  <div>
                    <div className="flex items-center space-x-2">
                      <div className="w-6 h-6 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 flex items-center justify-center">
                        <span className="text-white text-xs font-bold">BB</span>
                      </div>
                      <h3 className="text-base font-semibold text-gray-900">BetBolt User</h3>
                    </div>
                    <p className="text-gray-500 text-xs">user@betbolt.com</p>
                  </div>
                </div>
              </div>

              {/* Balance - Compact */}
              <div className="bg-white/5 backdrop-blur-sm rounded-xl p-4 border border-white/20">
                <div className="flex items-center justify-between mb-3">
                  <div>
                    <p className="text-gray-600 text-xs">Available Balance</p>
                    <p className="text-xl font-bold text-gray-900">$1,250.00</p>
                  </div>
                </div>
                <div className="flex space-x-2">
                  <button className="flex-1 bg-black hover:bg-gray-800 text-white px-4 py-3 rounded-xl text-sm font-medium transition-all duration-200 active:scale-95">
                    <svg className="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    Deposit
                  </a>
                  <button className="flex-1 bg-white/5 backdrop-blur-sm hover:bg-white/15 text-gray-700 px-4 py-3 rounded-xl text-sm font-medium transition-all duration-200 border border-white/20 hover:border-white/30 active:scale-95 shadow-[0_0_0_1px_rgba(255,255,255,0.2)] hover:shadow-[0_0_0_2px_rgba(255,255,255,0.3)]">
                    <svg className="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 12H4m0 0l6-6m-6 6l6 6" />
                    </svg>
                    Withdraw
                  </a>
                </div>
              </div>

              {/* Loyalty Progress - Fixed */}
              <div className="bg-white/5 backdrop-blur-sm rounded-xl p-4 border border-white/20">
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center space-x-2">
                    <svg className="w-4 h-4 text-yellow-500" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M5 16L3 5l5.5 5L12 4l3.5 6L21 5l-2 11H5zm2.7-2h8.6l.9-5.4L12 8.5 6.8 8.6L7.7 14z"/>
                    </svg>
                    <span className="font-semibold text-gray-900 text-sm">VIP Level</span>
                  </div>
                  <span className="text-sm font-medium text-gray-700 bg-yellow-100 px-2 py-1 rounded-full flex items-center">
                    <svg className="w-3 h-3 mr-1 text-yellow-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M5 16L3 5l5.5 5L12 4l3.5 6L21 5l-2 11H5zm2.7-2h8.6l.9-5.4L12 8.5 6.8 8.6L7.7 14z"/>
                    </svg>
                    Silver
                  </span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2 mb-2">
                  <div className="bg-gradient-to-r from-gray-300 to-silver-400 h-2 rounded-full" style={{width: '65%'}}></div>
                </div>
                <p className="text-xs text-gray-600">650 / 1000 points to Gold</p>
              </div>

              {/* Menu Items - Compact */}
              <div className="space-y-2">
                {/* Transaction History */}
                <button className="w-full flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-xl hover:bg-white/10 transition-all border border-white/20 text-left">
                  <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center">
                    <svg className="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                    </svg>
                  </div>
                  <div>
                    <div className="font-semibold text-gray-900 text-sm">Transaction History</div>
                    <div className="text-xs text-gray-500">View all deposits & withdrawals</div>
                  </div>
                </a>

                {/* My Bets */}
                <button 
                  onClick={() => {
                    setIsBetSlipOpen(true);
                    setIsBalanceDrawerOpen(false);
                  }}
                  className="w-full flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-xl hover:bg-white/10 transition-all border border-white/20 text-left"
                >
                  <div className="w-8 h-8 rounded-full bg-green-100 flex items-center justify-center">
                    <svg className="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                  </div>
                  <div>
                    <div className="font-semibold text-gray-900 text-sm">My Bets</div>
                    <div className="text-xs text-gray-500">View betting history</div>
                  </div>
                </a>

                {/* Edit Profile */}
                <button className="w-full flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-xl hover:bg-white/10 transition-all border border-white/20 text-left">
                  <div className="w-8 h-8 rounded-full bg-purple-100 flex items-center justify-center">
                    <svg className="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                  </div>
                  <div>
                    <div className="font-semibold text-gray-900 text-sm">Edit Profile</div>
                    <div className="text-xs text-gray-500">Update personal information</div>
                  </div>
                </a>

                {/* Refer a Friend */}
                <button className="w-full flex items-center space-x-3 p-3 bg-white/5 backdrop-blur-sm rounded-xl hover:bg-white/10 transition-all border border-white/20 text-left">
                  <div className="w-8 h-8 rounded-full bg-orange-100 flex items-center justify-center">
                    <svg className="w-4 h-4 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
                    </svg>
                  </div>
                  <div>
                    <div className="font-semibold text-gray-900 text-sm">Refer a Friend</div>
                    <div className="text-xs text-gray-500">Earn rewards for referrals</div>
                  </div>
                </a>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Casino Game Drawer */}
      {isCasinoGameOpen && (
        <div className="fixed inset-0 z-50">
          <div 
            className="absolute inset-0 bg-black/50 backdrop-blur-sm" 
            onClick={() => setIsCasinoGameOpen(false)}
          ></div>
          <div className="absolute inset-4 bg-white/95 backdrop-blur-xl rounded-2xl shadow-2xl border border-white/20 flex flex-col">
            {/* Close Button - Top Right */}
            <div className="flex justify-end p-4">
              <button
                onClick={() => setIsCasinoGameOpen(false)}
                className="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors"
              >
                <svg className="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>

            {/* Loading Content - Centered */}
            <div className="flex-1 flex items-center justify-center">
              <div className="text-center">
                <div className="w-16 h-16 border-4 border-gray-200 border-t-blue-500 rounded-full animate-spin mx-auto mb-4"></div>
                <h2 className="text-2xl font-bold text-gray-900 mb-2">Loading Game...</h2>
                <p className="text-gray-600">Preparing your casino experience</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Search Drawer */}
      {isSearchDrawerOpen && (
        <div className="fixed inset-0 z-50">
          <div 
            className="absolute inset-0 bg-black/50 backdrop-blur-sm" 
            onClick={() => setIsSearchDrawerOpen(false)}
          ></div>
          <div className="absolute bottom-0 left-0 right-0 bg-white/95 backdrop-blur-xl rounded-t-2xl max-h-[80vh] overflow-hidden border-t border-white/20">
            {/* Handle */}
            <div className="flex justify-center pt-2 pb-1">
              <div className="w-12 h-1 bg-gray-300 rounded-full"></div>
            </div>

            {/* Header */}
            <div className="px-4 py-3 border-b border-gray-200/50">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-bold text-gray-900">Search</h2>
                <button
                  onClick={() => setIsSearchDrawerOpen(false)}
                  className="w-7 h-7 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 hover:bg-white/20 flex items-center justify-center transition-colors"
                >
                  <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </a>
              </div>
            </div>

            {/* Content */}
            <div className="px-4 py-4 space-y-4 overflow-y-auto max-h-[60vh]">
              {/* Search Input */}
              <div className="relative">
                <input
                  type="text"
                  placeholder="Search sports, teams, games..."
                  className="w-full bg-gray-50 border border-gray-200 rounded-xl px-4 py-3 pl-12 text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
                <svg className="w-5 h-5 text-gray-400 absolute left-4 top-1/2 transform -translate-y-1/2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>

              {/* Quick Filters */}
              <div className="space-y-3">
                <h3 className="text-sm font-semibold text-gray-700">Sports</h3>
                <div className="flex flex-wrap gap-2">
                  <button className="bg-blue-100 text-blue-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-blue-200 transition-colors">
                    Premier League
                  </a>
                  <button className="bg-green-100 text-green-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-green-200 transition-colors">
                    NFL
                  </a>
                  <button className="bg-orange-100 text-orange-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-orange-200 transition-colors">
                    NBA
                  </a>
                  <button className="bg-purple-100 text-purple-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-purple-200 transition-colors">
                    Champions League
                  </a>
                  <button className="bg-red-100 text-red-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-red-200 transition-colors">
                    Horse Racing
                  </a>
                  <button className="bg-teal-100 text-teal-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-teal-200 transition-colors">
                    Golf
                  </a>
                  <button className="bg-gray-100 text-gray-700 px-3 py-2 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors">
                    Formula 1
                  </a>
                </div>
              </div>

              {/* Recommended Casino Games */}
              <div className="space-y-3">
                <h3 className="text-sm font-semibold text-gray-700">Recommended Casino Games</h3>
                <div className="space-y-2">
                  <button className="w-full flex items-center space-x-3 p-3 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
                    <div className="w-12 h-12 bg-gradient-to-br from-purple-400 to-blue-500 rounded-lg flex items-center justify-center">
                      <span className="text-white text-lg font-bold">BJ</span>
                    </div>
                    <div className="flex-1 text-left">
                      <div className="font-semibold text-gray-900">Blackjack</div>
                      <div className="text-xs text-gray-500">Classic card game â€¢ 99.5% RTP</div>
                    </div>
                  </a>
                  
                  <button className="w-full flex items-center space-x-3 p-3 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
                    <div className="w-12 h-12 bg-gradient-to-br from-green-400 to-emerald-500 rounded-lg flex items-center justify-center">
                      <span className="text-white text-lg font-bold">FS</span>
                    </div>
                    <div className="flex-1 text-left">
                      <div className="font-semibold text-gray-900">Finn and the Swirly Spin</div>
                      <div className="text-xs text-gray-500">Adventure slot â€¢ 96.04% RTP</div>
                    </div>
                  </a>
                  
                  <button className="w-full flex items-center space-x-3 p-3 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors">
                    <div className="w-12 h-12 bg-gradient-to-br from-red-400 to-pink-500 rounded-lg flex items-center justify-center">
                      <span className="text-white text-lg font-bold">RR</span>
                    </div>
                    <div className="flex-1 text-left">
                      <div className="font-semibold text-gray-900">Rabid Randy</div>
                      <div className="text-xs text-gray-500">Action slot â€¢ 96.2% RTP</div>
                    </div>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}